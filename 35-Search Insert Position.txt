35. Search Insert Position

Given a sorted array and a target value, return the index if the target is found. 
If not, return the index where it would be if it were inserted in order.
You may assume no duplicates in the array.

Example 1:
Input: [1,3,5,6], 5
Output: 2

Example 2:
Input: [1,3,5,6], 2
Output: 1

Example 3:
Input: [1,3,5,6], 7
Output: 4

Example 1:
Input: [1,3,5,6], 0
Output: 0


题目大意：

        给定一个有序数组和目标值，如果找到目标，则返回索引。如果没有，按顺序插入后返回索引。

题目算法：
	
	属于查找比较问题，比较简单。最简单的方法是将数组遍历比较，遍历方法可以优化（比如二分查找），这里使用的是最简单的遍历方法。
		
Java答案：

class Solution {
    public int searchInsert(int[] nums, int target) {
        for(int i = 0;i < nums.length;i++){
            if(nums[i] >= target){
                return i;
            }
        }
        if(target > nums[nums.length - 1]){
                return nums.length;
        }
	//可以省略
        /**if(nums.length == 0){
            return 0;   
        }**/
        return 0;   
    }
}	
